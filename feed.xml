<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Papers We Love</title>
  <subtitle>A repository of academic computer science research papers and a community who loves reading them.</subtitle>
  <id>http://papers-we-love.github.io/</id>
  <link href="http://papers-we-love.github.io/"/>
  <link href="http://papers-we-love.github.io/feed.xml" rel="self"/>
  <updated>2015-06-23T20:00:00-04:00</updated>
  <author>
    <name>Papers We Love</name>
  </author>
  <entry>
    <title>Samy Al Bahra on Making Lockless Synchronization Fast</title>
    <link rel="alternate" href="http://papers-we-love.github.io/2015/video/samy-al-bahra-lockless-synchronization/"/>
    <id>http://papers-we-love.github.io/2015/video/samy-al-bahra-lockless-synchronization/</id>
    <published>2015-06-23T20:00:00-04:00</published>
    <updated>2015-06-24T07:56:59-04:00</updated>
    <author>
      <name>Darren</name>
    </author>
    <content type="html">&lt;iframe class="video" width="560" height="315" src="https://www.youtube.com/embed/aV-RyMXXuks" frameborder="0" allowfullscreen=""&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;/p&gt;

&lt;h2 id="new-york---may-26-2015"&gt;New York - May 26, 2015&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Samy Al Bahra&lt;/strong&gt; on Making Lockless Synchronization Fast&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Meetup:&lt;/strong&gt; &lt;a href="http://bit.ly/1GqLaHG"&gt;http://bit.ly/1GqLaHG&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Paper:&lt;/strong&gt; &lt;a href="http://bit.ly/1ff8AXK"&gt;http://bit.ly/1ff8AXK&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Slides:&lt;/strong&gt; &lt;a href="http://bit.ly/1SkIRLK"&gt;http://bit.ly/1SkIRLK&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Multicore systems are ubiquitous but modern concurrent programming techniques still do not see wide-spread adoption. Most concurrent software (developed in low-level languages) still relies on error-prone and unscalable memory management techniques for correctness despite the introduction of superior methods over 30 years ago. Safe memory reclamation allows for performant and robust memory management that is also suitable for advanced concurrent programming techniques such as non-blocking synchronization. If properly used, safe memory reclamation techniques allow improved performance and simplicity without the complexity of full-blown garbage collection.&lt;/p&gt;

&lt;p&gt;This paper provides a terrific overview of common safe memory reclamation mechanisms and then explores their performance implications. In this talk, I will do the same but with stronger emphasis on the introductory aspects of safe memory reclamation and contrast with a refreshed performance analysis. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Bio&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Samy Al Bahra (&lt;a href="https://twitter.com/0xF390"&gt;@0xf390&lt;/a&gt;) is the co-founder of &lt;a href="http://backtrace.io/"&gt;Backtrace&lt;/a&gt;, where he is helping build a modern debugging platform for today's complex applications. Prior to Backtrace, Samy was a principal engineer at AppNexus, where he played a lead role in the architecture and development of many mission-critical components of the ecosystem. His work at AppNexus was instrumental in scaling the system to 18 billion impressions with orders of magnitude in efficiency improvements. Prior to AppNexus, Samy was behind major performance improvements to the core technology at Message Systems. At the George Washington University High Performance Computing Laboratory, Samy worked on the UPC programming language, heterogeneous computing and multicore synchronization. Samy is also the founder of the &lt;a href="http://concurrencykit.org/"&gt;Concurrency Kit&lt;/a&gt; project, which several leading technology companies rely on for scalability and performance. Samy serves on the ACM Practitioners Board.&lt;/p&gt;

&lt;hr /&gt;

&lt;p style="display: flex; flex-direction: row; justify-content: center; align-items: center;"&gt;
&lt;a href="https://www.twosigma.com/"&gt;&lt;img src="/images/TwoSigma_RGB.jpg" alt="TwoSigma" title="TwoSigma - Platinum Sponsor of Papers We Love NYC" style="width: 200px; margin: 0 1em 0 0;" /&gt;&lt;/a&gt; &lt;span style="flex: 1;"&gt;The &lt;strong&gt;New York Chapter&lt;/strong&gt; would like to thank &lt;a href="http://www.twosigma.com"&gt;TwoSigma&lt;/a&gt; for helping to make this meetup possible.&lt;/span&gt;
&lt;/p&gt;

&lt;hr /&gt;
</content>
  </entry>
  <entry>
    <title>Mark Masse on Architectural Styles and the Design of Network-based Software</title>
    <link rel="alternate" href="http://papers-we-love.github.io/2015/video/mark-masse-design-network-based-software/"/>
    <id>http://papers-we-love.github.io/2015/video/mark-masse-design-network-based-software/</id>
    <published>2015-06-03T20:00:00-04:00</published>
    <updated>2015-06-16T12:48:32-04:00</updated>
    <author>
      <name>Darren</name>
    </author>
    <content type="html">&lt;iframe class="video" width="560" height="315" src="https://www.youtube.com/embed/kM1_gqs8RrQ" frameborder="0" allowfullscreen=""&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;/p&gt;

&lt;h2 id="los-angeles---june-4-2015"&gt;Los Angeles - June 4, 2015&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Mark Masse&lt;/strong&gt; on Architectural Styles and the Design of Network-based Software&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Meetup:&lt;/strong&gt; &lt;a href="http://www.meetup.com/Papers-We-Love-LA/events/222365009/"&gt;http://www.meetup.com/Papers-We-Love-LA/events/222365009/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;At this Papers We Love LA we had Mark Masse present "Architectural Styles and the Design of Network-based Software Architectures" by Roy Fielding. This presentation focused primarily on Chapter 5, which introduces the Representational State Transfer (REST) architectural style for distributed hypermedia systems. REST API design topics are also covered in the presentation.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Bio&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Mark Masse spent his early career with Disney, architecting and developing the content management system (CMS) that powers ESPN.com, ABC.com and Disney.com. In 2011, Mark architected the API management system used by Walt Disney Theme Parks and Resorts and authored the "REST API Design Rulebook" for O'Reilly. In 2014, Mark joined Riot Games as an Engineering Manager supporting a team that is dedicated to leveling up other internal teams with apps, tools, and automation.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.linkedin.com/in/markmasse"&gt;https://www.linkedin.com/in/markmasse&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p style="display: flex; flex-direction: row; justify-content: center; align-items: center;"&gt;
&lt;a href="https://www.riotgames.com/"&gt;&lt;img src="http://electric-cloud.com/wp-content/uploads/2014/06/logo-riot1.png" alt="Riotgames" title="This talk sponsored by Riotgames" style="width: 200px; margin: 0 1em 0 0;" /&gt;&lt;/a&gt; &lt;span style="flex: 1;"&gt;The &lt;strong&gt;Los Angeles Chapter&lt;/strong&gt; would like to thank &lt;a href="http://www.riotgames.com"&gt;Riot Games&lt;/a&gt; for helping to make this meetup possible.&lt;/span&gt;
&lt;/p&gt;

&lt;hr /&gt;
</content>
  </entry>
  <entry>
    <title>June Meetups</title>
    <link rel="alternate" href="http://papers-we-love.github.io/2015/news/june-meetups/"/>
    <id>http://papers-we-love.github.io/2015/news/june-meetups/</id>
    <published>2015-05-31T20:00:00-04:00</published>
    <updated>2015-06-24T19:00:35-04:00</updated>
    <author>
      <name>Joshua</name>
    </author>
    <content type="html">&lt;p&gt;We have another great line-up of meet-ups scheduled for June across a number of our chapters:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Vienna 6/1&lt;/strong&gt;: &lt;a href="http://www.meetup.com/Papers-We-Love-Vienna/events/221984745/"&gt;Random Forests&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Toronto 6/3&lt;/strong&gt;: &lt;a href="http://www.meetup.com/Papers-We-Love-Toronto/events/222561882/"&gt;Donny Nadolny on Raft&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Addison 6/10&lt;/strong&gt;: &lt;a href="http://www.meetup.com/Papers-We-Love-Dallas/events/222920570/"&gt;Paxos Made Simple&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Seattle 6/11&lt;/strong&gt;: &lt;a href="http://www.meetup.com/Papers-We-Love-Seattle/events/222902098/"&gt;: Chain Replication for Supporting High Throughput and Availability&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Chicago 6/15&lt;/strong&gt;: &lt;a href="http://www.meetup.com/Papers-We-Love-Chicago/events/222636732/"&gt;Hokusai â€” Sketching Streams in Real Time&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Saint Louis 6/15&lt;/strong&gt;: &lt;a href="http://www.meetup.com/Papers-We-Love-in-saint-louis/events/221203537/"&gt;Largescale cluster management at Google with Borg&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;New York 6/23&lt;/strong&gt;: &lt;a href="http://www.meetup.com/papers-we-love/events/223064862/"&gt;Jason Ganetsky on Making a Fast Curry&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Santa Monica 6/24&lt;/strong&gt;: &lt;a href="http://www.meetup.com/Papers-We-Love-LA/events/223161204/"&gt;Phil Freeman on Principal typeschemes for functional programs&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Montreal 6/25&lt;/strong&gt;: &lt;a href="http://www.meetup.com/Papers-We-Love-Montreal/events/222772596/"&gt;Machine Learning: The HighInterest Credit Card of Technical Debt&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Vienna 6/29&lt;/strong&gt;: &lt;a href="http://www.meetup.com/Papers-We-Love-Vienna/events/222947760/"&gt;Neural Turing Machines&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;San Francisco 6/30&lt;/strong&gt;: &lt;a href="http://www.meetup.com/papers-we-love-too/events/220795812/"&gt;Sargun Dhillon on Facebook Haystack&lt;/a&gt;
 &lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;The &lt;strong&gt;New York Chapter&lt;/strong&gt; would like to give special thanks to our Platinum sponsor &lt;a href="https://www.twosigma.com"&gt;TwoSigma&lt;/a&gt;. We would like to give additional thanks to &lt;a href="http://dev.theladders.com"&gt;The Ladders&lt;/a&gt; and &lt;a href="http://engineering.tumblr.com"&gt;Tumblr&lt;/a&gt; and for providing food/refreshments and facilities for the June meetup.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Ryan Nichols on An Axiomatic Basis for Computer Programming</title>
    <link rel="alternate" href="http://papers-we-love.github.io/2015/video/ryan-nichols-axiomatic-basis-computer-programming/"/>
    <id>http://papers-we-love.github.io/2015/video/ryan-nichols-axiomatic-basis-computer-programming/</id>
    <published>2015-05-07T20:00:00-04:00</published>
    <updated>2015-06-16T12:39:24-04:00</updated>
    <author>
      <name>Darren</name>
    </author>
    <content type="html">&lt;iframe class="video" width="560" height="315" src="https://www.youtube.com/embed/lbMVYIdPvLA" frameborder="0" allowfullscreen=""&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;/p&gt;

&lt;h2 id="los-angeles---may-8-2015"&gt;Los Angeles - May 8, 2015&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Ryan Nichols&lt;/strong&gt; on An Axiomatic Basis for Computer Programming&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Meetup:&lt;/strong&gt; &lt;a href="http://www.meetup.com/Papers-We-Love-LA/events/221989188/"&gt;http://www.meetup.com/Papers-We-Love-LA/events/221989188/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Paper:&lt;/strong&gt; &lt;a href="https://github.com/papers-we-love/papers-we-love/blob/master/comp_sci_fundamentals_and_history/axiomatic-basis-computer-programming.pdf?raw=true"&gt;https://github.com/papers-we-love/papers-we-love/blob/master/comp_sci_fundamentals_and_history/axiomatic-basis-computer-programming.pdf?raw=true&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;A brilliant paper written in 1969, which introduced some of the most influential components of programming which we all rely on today. We'll be discussing automatic verification of program properties, Hoare logic, and more.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Bio&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Ryan Nichols (@rynodivino) is a front-end engineer at Yahoo. He enjoys &amp;lt;cool hobby&amp;gt; and &amp;lt;funny interest&amp;gt; (and making terrible jokes)!&lt;/p&gt;

&lt;hr /&gt;

&lt;p style="display: flex; flex-direction: row; justify-content: center; align-items: center;"&gt;
&lt;a href="https://www.yahoo.com/"&gt;&lt;img src="http://assets.fontsinuse.com/static/use-media-items/15/14246/full-2048x768/52c4c6bc/Yahoo_Logo.png" alt="Yahoo" title="This talk sponsored by Yahoo" style="width: 200px; margin: 0 1em 0 0;" /&gt;&lt;/a&gt; &lt;span style="flex: 1;"&gt;The &lt;strong&gt;Los Angeles Chapter&lt;/strong&gt; would like to thank &lt;a href="http://www.yahoo.com"&gt;Yahoo&lt;/a&gt; for helping to make this meetup possible.&lt;/span&gt;
&lt;/p&gt;

&lt;hr /&gt;
</content>
  </entry>
  <entry>
    <title>May Meetups</title>
    <link rel="alternate" href="http://papers-we-love.github.io/2015/news/may-meetups/"/>
    <id>http://papers-we-love.github.io/2015/news/may-meetups/</id>
    <published>2015-04-30T20:00:00-04:00</published>
    <updated>2015-05-21T19:00:34-04:00</updated>
    <author>
      <name>Joshua</name>
    </author>
    <content type="html">&lt;p&gt;We have another great line-up of meet-ups scheduled for May across a number of our chapters:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Toronto 5/6&lt;/strong&gt;: &lt;a href="http://www.meetup.com/Papers-We-Love-Toronto/events/221921448/"&gt;Paul Osman on CRDTs  Commutative Replicated Data Types&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Amsterdam 5/12&lt;/strong&gt;: &lt;a href="http://www.meetup.com/papers-we-love-amsterdam/events/222188556/"&gt;Spanner: Google's GloballyDistributed Database&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Chicago 5/12&lt;/strong&gt;: &lt;a href="http://www.meetup.com/Papers-We-Love-Chicago/events/222024292/"&gt;An Empirical Study of the Naive Bayes Classifier&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Addison 5/13&lt;/strong&gt;: &lt;a href="http://www.meetup.com/Papers-We-Love-Dallas/events/222394809/"&gt;Scrum Metrics for Hyperproductive Teams: How They Fly like Fighter Aircraft&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Seattle 5/14&lt;/strong&gt;: &lt;a href="http://www.meetup.com/Papers-We-Love-Seattle/events/222065399/"&gt;: The LCA Problem Revisited&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Saint Louis 5/18&lt;/strong&gt;: &lt;a href="http://www.meetup.com/Papers-We-Love-in-saint-louis/events/220570557/"&gt;The Chemical Basis of Morphogenesis (Turing)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;London 5/20&lt;/strong&gt;: &lt;a href="http://www.meetup.com/Papers-We-Love-London/events/222094026/"&gt;Oliver Charles on "Kleisli Arrows of Outrageous Fortune"&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Berlin 5/21&lt;/strong&gt;: &lt;a href="http://www.meetup.com/Papers-We-Love-Berlin/events/221994661/"&gt;Programming concepts pioneered by McCarthy's  paper on Lisp&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Winnipeg 5/21&lt;/strong&gt;: &lt;a href="http://www.meetup.com/Papers-We-Love-Winnipeg/events/222214950/"&gt;The Bargaining Problem&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;San Francisco 5/21&lt;/strong&gt;: &lt;a href="http://www.meetup.com/papers-we-love-too/events/212348392/"&gt;Devon O'Dell  Nonblocking Algorithms &amp;amp; Scalable Multicore Programming&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Montreal 5/25&lt;/strong&gt;: &lt;a href="http://www.meetup.com/Papers-We-Love-Montreal/events/222043241/"&gt;JohnsonLindenstrauss Lemma&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;New York 5/26&lt;/strong&gt;: &lt;a href="http://www.meetup.com/papers-we-love/events/222366060/"&gt;Samy Al Bahra on Making Lockless Synchronization Fast&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Los Angeles 5/27&lt;/strong&gt;: &lt;a href="http://www.meetup.com/Papers-We-Love-LA/events/222365009/"&gt;Mark Masse on Architectural Styles and the Design of Networkbased Software&lt;/a&gt;
 &lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;The &lt;strong&gt;New York Chapter&lt;/strong&gt; would like to give special thanks to our Platinum sponsor &lt;a href="https://www.twosigma.com"&gt;TwoSigma&lt;/a&gt;. We would like to give additional thanks to &lt;a href="http://dev.theladders.com"&gt;The Ladders&lt;/a&gt; and &lt;a href="http://engineering.tumblr.com"&gt;Tumblr&lt;/a&gt; and for providing food/refreshments and facilities for the May meetup.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Neha Narula on The Scalable Commutativity Rule</title>
    <link rel="alternate" href="http://papers-we-love.github.io/2015/video/neha-narula-scalable-commutativity-rule/"/>
    <id>http://papers-we-love.github.io/2015/video/neha-narula-scalable-commutativity-rule/</id>
    <published>2015-04-05T20:00:00-04:00</published>
    <updated>2015-04-25T11:28:30-04:00</updated>
    <author>
      <name>Darren</name>
    </author>
    <content type="html">&lt;iframe class="video" width="560" height="315" src="https://www.youtube.com/embed/JE-jSZ8zToM" frameborder="0" allowfullscreen=""&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;/p&gt;

&lt;h2 id="new-york---april-1-2015"&gt;New York - April 1, 2015&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Neha Narula&lt;/strong&gt; on The Scalable Commutativity Rule&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Meetup:&lt;/strong&gt; &lt;a href="http://www.meetup.com/papers-we-love/events/221194444/"&gt;http://www.meetup.com/papers-we-love/events/221194444/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Paper:&lt;/strong&gt; &lt;a href="http://bit.ly/1IzyXA7"&gt;http://bit.ly/1IzyXA7&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Slides:&lt;/strong&gt; &lt;a href="http://bit.ly/1GBP4y3"&gt;http://bit.ly/1GBP4y3&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Audio:&lt;/strong&gt; &lt;a href="http://bit.ly/1D5Rdkw"&gt;http://bit.ly/1D5Rdkw&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Moore's law is over, or at least, we won't be making programs go faster by running on faster processors, but instead by parallelizing our code to use more of them.  Reasoning about concurrent code is difficult; but it's also very hard to understand whether your design has latent scalability bottlenecks until you can actually run it on many cores.  And what if the problem is in your interface, instead of just the implementation?&lt;/p&gt;

&lt;p&gt;This paper presents a simple, elegant rule:  whenever interface operations commute, they can be implemented in a way that scales.&lt;/p&gt;

&lt;p&gt;The authors apply this idea to Linux, and create a new operating system by using the rule, sv6.  Their paper also comes with software, COMMUTER, which can help developers evaluate their interfaces to find opportunities for scaling.&lt;/p&gt;

&lt;p&gt;This is a very powerful idea, and probably has applications in other areas like distributed systems. In this talk I'll present the paper, and speculate a bit about where else this research could be useful.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Bio&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Neha Narula (@neha) is a PhD candidate at MIT building fast, scalable distributed systems. In a previous life she was a Senior Software Engineer at Google, where she designed the first version of Blobstore, a system for storing and serving petabytes of immutable data, and worked on Native Client, a system for running native code securely through the browser.&lt;/p&gt;

&lt;hr /&gt;

&lt;p style="display: flex; flex-direction: row; justify-content: center; align-items: center;"&gt;
&lt;a href="https://www.twosigma.com/"&gt;&lt;img src="/images/TwoSigma_RGB.jpg" alt="TwoSigma" title="TwoSigma - Platinum Sponsor of Papers We Love NYC" style="width: 200px; margin: 0 1em 0 0;" /&gt;&lt;/a&gt; &lt;span style="flex: 1;"&gt;The &lt;strong&gt;New York Chapter&lt;/strong&gt; would like to thank our platinum sponsor &lt;a href="http://www.twosigma.com"&gt;TwoSigma&lt;/a&gt; for helping to make this meetup possible.&lt;/span&gt;
&lt;/p&gt;

&lt;hr /&gt;
</content>
  </entry>
</feed>
