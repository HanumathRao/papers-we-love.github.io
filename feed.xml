<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Papers We Love</title>
  <subtitle>A repository of academic computer science research papers and a community who loves reading them.</subtitle>
  <id>http://papers-we-love.github.io/</id>
  <link href="http://papers-we-love.github.io/"/>
  <link href="http://papers-we-love.github.io/feed.xml" rel="self"/>
  <updated>2016-07-05T20:00:00-04:00</updated>
  <author>
    <name>Papers We Love</name>
  </author>
  <entry>
    <title>Papers We Love - QCon NYC Edition w/ Evelina, Eric, Ines, &amp; Caitie </title>
    <link rel="alternate" href="http://papers-we-love.github.io/2016/video/evelina-eric-ines-caitie/"/>
    <id>http://papers-we-love.github.io/2016/video/evelina-eric-ines-caitie/</id>
    <published>2016-07-05T20:00:00-04:00</published>
    <updated>2016-07-05T13:00:05-04:00</updated>
    <author>
      <name>Philosophy Science!!!</name>
    </author>
    <content type="html">&lt;iframe class="video" width="560" height="315" src="https://www.youtube.com/embed/-3tw2MYYT0Q" frameborder="0" allowfullscreen=""&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;/p&gt;

&lt;h2 id="new-york---june-14-2016"&gt;New York - June 14, 2016&lt;/h2&gt;

&lt;p&gt;Papers We Love - QCon NYC Edition w/ &lt;strong&gt;Evelina, Eric, Ines, &amp;amp; Caitie&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Meetup:&lt;/strong&gt; &lt;a href="http://www.meetup.com/papers-we-love/events/231394908/"&gt;http://www.meetup.com/papers-we-love/events/231394908/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Papers:&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://bit.ly/1P2dD7H"&gt;Mastering the Game of Go with Deep Neural Networks and Tree Search&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://bit.ly/29tCFFp"&gt;Experience with Processes and Monitors in Mesa&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://bit.ly/29tC9XP"&gt;IronFleet: Proving Practical Distributed Systems Correct&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://bit.ly/1oNFHjs"&gt;Simple Testing Can Prevent Most Critical Failures…&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Audio:&lt;/strong&gt; &lt;a href="https://www.mixcloud.com/paperswelove/papers-we-love-qcon-nyc-edition-w-evelina-eric-ines-caitie/"&gt;https://www.mixcloud.com/paperswelove/papers-we-love-qcon-nyc-edition-w-evelina-eric-ines-caitie/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Abstracts&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Evelina Gabasova presenting on Mastering the Game of Go with Deep Neural Networks and Tree Search&lt;/em&gt;:&lt;/p&gt;

&lt;p&gt;The game of Go has long been viewed as the most challenging of classic games for artificial intelligence due to its enormous search space and the difficulty of evaluating board positions and moves. We introduce a new approach to computer Go that uses value networks to evaluate board positions and policy networks to select moves. These deep neural networks are trained by a novel combination of supervised learning from human expert games, and reinforcement learning from games of self-play. Without any lookahead search, the neural networks play Go at the level of state-of-the-art Monte-Carlo tree search programs that simulate thousands of random games of self-play. We also introduce a new search algorithm that combines Monte-Carlo simulation with value and policy networks. Using this search algorithm, our program AlphaGo achieved a 99.8% winning rate against other Go programs,and defeated the European Go champion by 5 games to 0. This is the first time that a computer program has defeated a human professional player in the full-sized game of Go, a feat previously thought to be at least a decade away.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Eric Brewer presenting on Experience with Processes and Monitors in Mesa&lt;/em&gt;:&lt;/p&gt;

&lt;p&gt;The use of monitors for describing concurrency has been much discussed in the literature. When monitors are used in real systems of any size, however, a number of problems arise which have not been adequately dealt with: the semantics of nested monitor calls; the various ways of defining the meaning of WAIT; priority scheduling; handling of timeouts, aborts and other exceptional conditions; interactions with process creation and destruction; monitoring large numbers of small objects. These problems are addressed by the facilities described here for concurrent programming in Mesa. Experience with several substantial applications gives us some confidence in the validity of our solutions.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Ines Sombra presenting on IronFleet: Proving Practical Distributed Systems Correct&lt;/em&gt;:&lt;/p&gt;

&lt;p&gt;Distributed systems are notorious for harboring subtle bugs. Verification can, in principle, eliminate these bugs a priori, but verification has historically been difficult to apply at full program scale, much less distributed-system scale. We describe a methodology for building practical and provably correct distributed systems based on a unique blend of TLA-style state-machine refinement and Hoare-logic verification. We demonstrate the methodology on a complex implementation of a Paxos-based replicated state machine library and a lease-based sharded key-value store. We prove that each obeys a concise safety specification, as well as desirable liveness requirements. Each implementation achieves performance competitive with a reference system. With our methodology and lessons learned, we aim to raise the standard for distributed systems from “tested” to “correct.”&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Caitie McCaffrey presenting on Simple Testing Can Prevent Most Critical Failures…&lt;/em&gt;:&lt;/p&gt;

&lt;p&gt;Large, production quality distributed systems still fail periodically, and do so sometimes catastrophically, where most or all users experience an outage or data loss. We present the result of a comprehensive study investigating 198 randomly selected, user-reported failures that occurred on Cassandra, HBase, Hadoop Distributed FileSystem (HDFS), Hadoop MapReduce, and Redis, with the goal of understanding how one or multiple faults eventually evolve into a user-visible failure. We found that from a testing point of view, almost all failures require only 3 or fewer nodes to reproduce, which is good news considering that these services typically run on a very large number of nodes. However, multiple inputs are needed to trigger the failures with the order between them being important. Finally, we found the error logs of these systems typically contain sufficient data on both the errors and the input events that triggered the failure, enabling the diagnose and the reproduction of the production failures.&lt;/p&gt;

&lt;p&gt;We found the majority of catastrophic failures could easily have been prevented by performing simple testing on error handling code – the last line of defense – even without an understanding of the software design. We extracted three simple rules from the bugs that have lead to some of the catastrophic failures, and developed a static checker, Aspirator, capable of locating these bugs. Over 30% of the catastrophic failures would have been prevented had Aspirator been used and the identified bugs fixed. Running Aspirator on the code of 9 distributed systems located 143 bugs and bad practices that have been fixed or confirmed by the developers.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Bios&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Evelina (Gabasova)&lt;/em&gt; is a machine learning researcher working in bioinformatics, trying to reverse-engineer cancer at University of Cambridge. Outside of academia, she also speaks at developer conferences and user groups about functional programming, machine learning and data science. She writes a blog at &lt;a href="http://www.evelinag.com/"&gt;http://www.evelinag.com&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Dr. (Eric) Brewer&lt;/em&gt; joined Google in May 2011 and leads the company’s compute infrastructure design. He focuses on all aspects of Internet­ based systems including cloud computing, scalability, containers, and storage. As a researcher, Dr. Brewer has led projects on scalable servers, network infrastructure, IoT, and the CAP Theorem. He has also led work on technology for developing regions, with projects in India, Indonesia, and Kenya among others, and including communications, power, and health care. In 1996, he co­founded Inktomi Corporation with a Berkeley grad student and helped lead it onto the NASDAQ 100. In 2000, working with President Clinton, Dr. Brewer helped to create USA.gov, the official portal of the Federal government.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Ines Sombra&lt;/em&gt; is a Distributed Systems Engineer at Fastly, where she spends her time helping the Web go faster. Ines holds an M.S. in Computology with an emphasis on Cheesy 80’s Rock Ballads. She has a fondness for steak, fernet, and a pug named Gordo. In a previous life she was a Data Engineer. Follow Ines &lt;a href="https://twitter.com/randommood"&gt;@randommood&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Caitie McCaffrey&lt;/em&gt; is a Backend Brat and Distributed Systems Diva at Twitter.  Prior to that she built  services and systems that power the entertainment industry at 343 Industries, Microsoft Game Studios, and HBO.  While at 343 Industries she partnered with the eXtreme Computing Group in Microsoft Research to productionize Orleans as part of her work rewriting the Halo Services.  Caitie has a degree in Computer Science from Cornell University She maintains a blog at &lt;a href="https://caitiem.com/"&gt;CaitieM.com&lt;/a&gt; and frequently discusses technology and entertainment on Twitter &lt;a href="https://twitter.com/caitie"&gt;@Caitie&lt;/a&gt;.&lt;/p&gt;

&lt;hr /&gt;

&lt;p style="display: flex; flex-direction: row; justify-content: center; align-items: center;"&gt;
&lt;a href="https://www.twosigma.com/"&gt;&lt;img src="/images/TwoSigma_RGB.jpg" alt="TwoSigma" title="TwoSigma - Platinum Sponsor of Papers We Love NYC" style="width: 200px; margin: 0 1em 0 0;" /&gt;&lt;/a&gt; &lt;span style="flex: 1;"&gt;The &lt;strong&gt;New York Chapter&lt;/strong&gt; would like to thank &lt;a href="http://www.twosigma.com"&gt;TwoSigma&lt;/a&gt; and host, &lt;a href="https://qconnewyork.com/"&gt;QCon NewYork&lt;/a&gt;, for helping to make this meetup possible.&lt;/span&gt;
&lt;/p&gt;

&lt;hr /&gt;
</content>
  </entry>
  <entry>
    <title>July Meetups</title>
    <link rel="alternate" href="http://papers-we-love.github.io/2016/news/july-meetups/"/>
    <id>http://papers-we-love.github.io/2016/news/july-meetups/</id>
    <published>2016-06-30T20:00:00-04:00</published>
    <updated>2016-07-18T13:00:39-04:00</updated>
    <author>
      <name>Joshua</name>
    </author>
    <content type="html">&lt;p&gt;We have another great line-up of meet-ups scheduled for July across a number of our chapters:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Vienna 7/4&lt;/strong&gt;: &lt;a href="http://www.meetup.com/Papers-We-Love-Vienna/events/232042988/"&gt;Clustering of time series is meaningless&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Chattanooga 7/5&lt;/strong&gt;: &lt;a href="http://www.meetup.com/Papers-We-Love-Chattanooga/events/231948068/"&gt;Lang Martin on Subtyping, Subclassing, and Trouble with OOP&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Toronto 7/6&lt;/strong&gt;: &lt;a href="http://www.meetup.com/Papers-We-Love-Toronto/events/232228762/"&gt;Suhail Shergill on Semantics of Probabilistic Programs&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Seattle 7/14&lt;/strong&gt;: &lt;a href="http://www.meetup.com/Papers-We-Love-Seattle/events/231423465/"&gt;: The Art of the Propagator&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;San Francisco 7/14&lt;/strong&gt;: &lt;a href="http://www.meetup.com/papers-we-love-too/events/228341271/"&gt;Paul Borrill on Time clocks and the reordering of events&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Saint Louis 7/18&lt;/strong&gt;: &lt;a href="http://www.meetup.com/Papers-We-Love-in-saint-louis/events/230831412/"&gt;Arrow's Impossibility Theorem&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Montréal 7/20&lt;/strong&gt;: &lt;a href="http://www.meetup.com/Papers-We-Love-Montreal/events/232100387/"&gt;MultipleScattering Microfacet BSDFs with the Smith Model&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;München 7/27&lt;/strong&gt;: &lt;a href="http://www.meetup.com/Papers-We-Love-Munich/events/232371814/"&gt;An Introduction to Statistical Relational Learning (SRL)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;London 7/27&lt;/strong&gt;: &lt;a href="http://www.meetup.com/Papers-We-Love-London/events/232484664/"&gt;Tom Hall on Plank's "A Tutorial on ReedSolomon Coding for Fault-Tolerance…"&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;New York  7/27&lt;/strong&gt;: &lt;a href="http://www.meetup.com/papers-we-love/events/231862215/"&gt;Deniz Altınbüken on Chain Replication (old and new) &amp;amp; a Mini with Wes Chow&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Portland 7/27&lt;/strong&gt;: &lt;a href="http://www.meetup.com/Papers-We-Love-PDX/events/232258136/"&gt;Seth Pellegrino on "In Search of an Understandable Consensus Algorithm" (Raft)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Los Angeles 7/27&lt;/strong&gt;: &lt;a href="http://www.meetup.com/Papers-We-Love-LA/events/232650720/"&gt;Sam Lecuyer on GOTO (Considered Harmful)+&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Boston 7/28&lt;/strong&gt;: &lt;a href="http://www.meetup.com/Papers-We-Love-Boston-Cambridge/events/232255392/"&gt;Tim Riser on Mastering the Game of Go with Deep Neural Networks &amp;amp; Tree Search&lt;/a&gt;
 &lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;The &lt;strong&gt;New York Chapter&lt;/strong&gt; would like to give special thanks to our Platinum sponsor &lt;a href="https://www.twosigma.com"&gt;TwoSigma&lt;/a&gt;. We would like to give additional thanks to &lt;a href="http://dev.theladders.com"&gt;The Ladders&lt;/a&gt; and &lt;a href="http://engineering.tumblr.com"&gt;Tumblr&lt;/a&gt; and for providing food/refreshments and facilities for the July meetup.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>John Allspaw on Common Ground and Coordination in Joint Activity</title>
    <link rel="alternate" href="http://papers-we-love.github.io/2016/video/john-allspaw-common-ground/"/>
    <id>http://papers-we-love.github.io/2016/video/john-allspaw-common-ground/</id>
    <published>2016-06-13T20:00:00-04:00</published>
    <updated>2016-06-30T13:00:05-04:00</updated>
    <author>
      <name>Rosanne</name>
    </author>
    <content type="html">&lt;iframe class="video" width="560" height="315" src="https://www.youtube.com/embed/KgC_N9glqMs" frameborder="0" allowfullscreen=""&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;/p&gt;

&lt;h2 id="new-york---may-25-2016"&gt;New York - May 25, 2016&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;John Allspaw&lt;/strong&gt; on &lt;a href="http://jeffreymbradshaw.net/publications/Common_Ground_Single.pdf"&gt;Common Ground and Coordination in Joint Activity&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Meetup:&lt;/strong&gt; &lt;a href="http://www.meetup.com/papers-we-love/events/230555338/"&gt;http://www.meetup.com/papers-we-love/events/230555338/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Paper:&lt;/strong&gt; &lt;a href="http://jeffreymbradshaw.net/publications/Common_Ground_Single.pdf"&gt;Common Ground and Coordination in Joint Activity&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Slides:&lt;/strong&gt; &lt;a href="https://speakerdeck.com/paperswelove/john-allspaw-on-common-ground-and-coordination-in-joint-activity"&gt;https://speakerdeck.com/paperswelove/john-allspaw-on-common-ground-and-coordination-in-joint-activity&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Audio:&lt;/strong&gt; &lt;a href="https://www.mixcloud.com/paperswelove/john-allspaw-on-common-ground-and-coordination-in-joint-activity/"&gt;https://www.mixcloud.com/paperswelove/john-allspaw-on-common-ground-and-coordination-in-joint-activity/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The paper I'm going to discuss is the result of what happens when people with backgrounds in mathematics, psychology, and artificial intelligence (Feltovich and Bradshaw) get together to ask questions about how teams operate alongside the originators of modern decision-making and cognitive systems engineering research (Klein and Woods).&lt;/p&gt;

&lt;p&gt;The concepts outlined in the paper have provided frames and directions in designing tools and environments where successful work requires multiple actors (whether they are people or software agents!) to succeed. This seminal paper takes a deep dive into not just people and teamwork, but what comprises the sometimes invisible activity of coordination, collaboration, cooperation, and the contracts and expectations entities have with each other along the way.&lt;/p&gt;

&lt;p&gt;The paper has had far-reaching influence in multiple domains: military intelligence, space transportation and aviation, and more recently: software engineering and operations on the web. Let me walk you through where this paper came from, what makes this paper critical to the future of software, and a hint about what I'm sure it means about the future.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Bio&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;John Allspaw (&lt;a href="https://twitter.com/allspaw"&gt;@allspaw&lt;/a&gt;) is Etsy’s Chief Technology Officer (CTO), leading the Product Engineering, Infrastructure and Operations teams. Previously, he was SVP of Infrastructure and Operations at Etsy. For over 17 years, he has worked in system operations in the biotech, government and online media industries.&lt;/p&gt;

&lt;p&gt;He began his career running vehicle crash simulations for the U.S. government. In 1997, he made the leap to the web, building the technical infrastructures at Salon, InfoWorld, Friendster and Flickr.&lt;/p&gt;

&lt;p&gt;John is the author of &lt;a href="http://shop.oreilly.com/product/9780596518585.do"&gt;The Art of Capacity Planning&lt;/a&gt; and &lt;a href="http://shop.oreilly.com/product/0636920000136.do"&gt;Web Operations: Keeping the Data On Time&lt;/a&gt;, both published by O’Reilly Media. He holds a BS from the University of Massachusetts, Amherst, and an MSC from Lund University.&lt;/p&gt;

&lt;hr /&gt;

&lt;p style="display: flex; flex-direction: row; justify-content: center; align-items: center;"&gt;
&lt;a href="https://www.twosigma.com/"&gt;&lt;img src="/images/TwoSigma_RGB.jpg" alt="TwoSigma" title="TwoSigma - Platinum Sponsor of Papers We Love NYC" style="width: 200px; margin: 0 1em 0 0;" /&gt;&lt;/a&gt; &lt;span style="flex: 1;"&gt;The &lt;strong&gt;New York Chapter&lt;/strong&gt; would like to thank &lt;a href="http://www.twosigma.com"&gt;TwoSigma&lt;/a&gt; for helping to make this meetup possible.&lt;/span&gt;
&lt;/p&gt;

&lt;hr /&gt;
</content>
  </entry>
  <entry>
    <title>Paul Snively on Propositions as Types</title>
    <link rel="alternate" href="http://papers-we-love.github.io/2016/video/paul-snively-propositions-as-types/"/>
    <id>http://papers-we-love.github.io/2016/video/paul-snively-propositions-as-types/</id>
    <published>2016-06-12T20:00:00-04:00</published>
    <updated>2016-06-13T22:54:38-04:00</updated>
    <author>
      <name>Sam</name>
    </author>
    <content type="html">&lt;iframe class="video" width="560" height="315" src="https://www.youtube.com/embed/dj7LcTAK8ow" frameborder="0" allowfullscreen=""&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;/p&gt;

&lt;h2 id="los-angeles---february-24-2016"&gt;Los Angeles - February 24, 2016&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Paul Snively&lt;/strong&gt; on Propositions as Types&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Meetup:&lt;/strong&gt; &lt;a href="http://www.meetup.com/Papers-We-Love-LA/events/228619562/"&gt;http://www.meetup.com/Papers-We-Love-LA/events/228619562/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Paper:&lt;/strong&gt; &lt;a href="http://homepages.inf.ed.ac.uk/wadler/papers/propositions-as-types/propositions-as-types.pdf"&gt;Propositions as Types&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Philip Wadler may be the most important computer scientist you’ve never heard of. However, as principal designer of the Haskell programming language, co-designer of generics in Java with Scala designer Martin Odersky, co-designer of XQuery for the W3C, and prolific (and humorous, cf. ’Threesomes, with and without blame’ from POPL 2010) writer and speaker, there is little doubt he has influenced you if you write software. His recent (March 2014) paper, 'Propositions as Types,' is his survey of the relationship between propositions, as in mathematical logic, and types, as in statically-typed programming language. Together, we’ll explore how and why this relationship is broad, deep, and mysterious; how it may shape new and future programming languages and possibly affect STEM education; and maybe even shed a little light (and hopefully a little less heat) on why some users of statically-typed languages are so adamant about it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Bio&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Paul Snively is an architect for Verizon OnCue, working in Scala in a purely functional fashion. He loves both building things other people use and thinking about how and why the things he builds work, and like many other people, has discovered that the best way to learn is to try to teach, so he led a workshop on formal logic at the Scala World conference in 2015, which he later re-recorded as a &lt;a href="https://www.youtube.com/watch?v=1KWcuhX-QTg"&gt;screencast&lt;/a&gt;; he discussed &lt;a href="https://www.youtube.com/watch?v=SWTWkYbcWU0"&gt;Type Systems: The Good, The Bad, and The Ugly&lt;/a&gt; at the Strange Loop conference in 2014 with Amanda Laucher; and he discussed &lt;a href="http://www.infoq.com/presentations/Types-Tests"&gt;Types vs. Tests: An Epic Battle?&lt;/a&gt; at the Strange Loop conference in 2012, also with Amanda Laucher.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;a href="https://yahoo.com/"&gt;&lt;img class="left no-shadow" alt="Yahoo" style="height: 60px" src="/images/yahoo_logo.jpg" /&gt;&lt;/a&gt; &lt;span style="display: inline-block; margin-top: 20px;"&gt;Papers We Love Los Angeles would like to thank &lt;a href="https://yahoo.com/"&gt;Yahoo&lt;/a&gt; for hosting this month's meetup.&lt;/span&gt;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>June Meetups</title>
    <link rel="alternate" href="http://papers-we-love.github.io/2016/news/june-meetups/"/>
    <id>http://papers-we-love.github.io/2016/news/june-meetups/</id>
    <published>2016-05-31T20:00:00-04:00</published>
    <updated>2016-06-30T19:00:36-04:00</updated>
    <author>
      <name>Joshua</name>
    </author>
    <content type="html">&lt;p&gt;We have another great line-up of meet-ups scheduled for June across a number of our chapters:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Toronto 6/1&lt;/strong&gt;: &lt;a href="http://www.meetup.com/Papers-We-Love-Toronto/events/231446949/"&gt;James MacAulay on Peter Landin's The Mechanical Evaluation of Expressions&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;London 6/7&lt;/strong&gt;: &lt;a href="http://www.meetup.com/Papers-We-Love-London/events/231387541/"&gt;Philip Wadler  Definitional Interpreters for Higher-Order Programming Languages&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Chattanooga 6/7&lt;/strong&gt;: &lt;a href="http://www.meetup.com/Papers-We-Love-Chattanooga/events/230869596/"&gt;Neil Menne on Building Robust Systems&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Seattle 6/9&lt;/strong&gt;: &lt;a href="http://www.meetup.com/Papers-We-Love-Seattle/events/231024908/"&gt;: Liquid Haskell / PayWord and Micromint&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;New York 6/14&lt;/strong&gt;: &lt;a href="http://www.meetup.com/papers-we-love/events/231394908/"&gt;QCon NYC Edition w/ Evelina, Eric, Ines, &amp;amp; Caitie&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Boston 6/16&lt;/strong&gt;: &lt;a href="http://www.meetup.com/Papers-We-Love-Boston-Cambridge/events/229948866/"&gt;Steve Willis on Xerox Network Systems (XNS)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Vienna 6/20&lt;/strong&gt;: &lt;a href="http://www.meetup.com/Papers-We-Love-Vienna/events/231318183/"&gt;Apache Kafka&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Saint Louis 6/20&lt;/strong&gt;: &lt;a href="http://www.meetup.com/Papers-We-Love-in-saint-louis/events/228275379/"&gt;What Makes Paris Look Like Paris?&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Montréal 6/22&lt;/strong&gt;: &lt;a href="http://www.meetup.com/Papers-We-Love-Montreal/events/231254622/"&gt;A Streaming Algorithm for the Convex Hull&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Bucharest 6/23&lt;/strong&gt;: &lt;a href="http://www.meetup.com/papers-we-love-bucharest/events/231882371/"&gt;June Meetup&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;San Francisco 6/23&lt;/strong&gt;: &lt;a href="http://www.meetup.com/papers-we-love-too/events/220836431/"&gt;Kiran Bhattaram on A Mathematical Theory of Communication&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Portland 6/28&lt;/strong&gt;: &lt;a href="http://www.meetup.com/Papers-We-Love-PDX/events/231195468/"&gt;Caitie McCaffrey on "Detection of Mutual Inconsistency in Distributed Systems"&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Los Angeles 6/29&lt;/strong&gt;: &lt;a href="http://www.meetup.com/Papers-We-Love-LA/events/231756544/"&gt;Mike Matuzak on On Criteria To Be Used in Decomposing Systems into Modules&lt;/a&gt;
 &lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;The &lt;strong&gt;New York Chapter&lt;/strong&gt; would like to give special thanks to our Platinum sponsor &lt;a href="https://www.twosigma.com"&gt;TwoSigma&lt;/a&gt;. We would like to give additional thanks to &lt;a href="http://dev.theladders.com"&gt;The Ladders&lt;/a&gt; and &lt;a href="http://engineering.tumblr.com"&gt;Tumblr&lt;/a&gt; and for providing food/refreshments and facilities for the June meetup.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Andrew Louis on The Memex and designing the Internet before digital computers</title>
    <link rel="alternate" href="http://papers-we-love.github.io/2016/video/andrew-louis-on-the-memex-and-designing-the-internet-before-digital-computers/"/>
    <id>http://papers-we-love.github.io/2016/video/andrew-louis-on-the-memex-and-designing-the-internet-before-digital-computers/</id>
    <published>2016-05-15T20:00:00-04:00</published>
    <updated>2016-05-17T08:55:40-04:00</updated>
    <author>
      <name>Joshua</name>
    </author>
    <content type="html">&lt;iframe class="video" width="560" height="315" src="https://www.youtube.com/embed/x2Z3Ev79FI0" frameborder="0" allowfullscreen=""&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;/p&gt;

&lt;h2 id="toronto---april-6-2016"&gt;Toronto - April 6, 2016&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Meetup:&lt;/strong&gt; &lt;a href="http://www.meetup.com/Papers-We-Love-Toronto/events/229518049/"&gt;http://www.meetup.com/Papers-We-Love-Toronto/events/229518049/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="andrew-louis-on-the-memex-and-designing-the-internet-before-digital-computershttpwwwtheatlanticcommagazinearchive194507as-we-may-think303881"&gt;Andrew Louis on &lt;a href="http://www.theatlantic.com/magazine/archive/1945/07/as-we-may-think/303881/"&gt;The Memex and designing the Internet before digital computers&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Fresh from his experiences during World War 2, scientist Vannevar Bush wrote an essay entitled "As We May Think" (1945) about a physical device that could help people deal with information overload with a hope that it could prevent our species from accidentally destroying itself. His “Memex” would store and organize an individual’s library and allow for annotating, linking, and sharing with others. In an era when “computer” meant a room full of people manually calculating numbers, Bush’s gave us a vision of how computers could empower individuals.&lt;/p&gt;

&lt;p&gt;We’ll explore:&lt;/p&gt;

&lt;p&gt;• The state of computing at the time the paper was written.&lt;/p&gt;

&lt;p&gt;• The nature of Bush’s device and his technical solutions for retrieving, annotating, and linking information (mechanical algorithms using microfilm!)&lt;/p&gt;

&lt;p&gt;• How the paper directly lead to the first PCs and creation of the internet and in particular, its influence on Douglas Engelbart's work in the 1960s (the person who pioneered GUIs, the computer mouse, e-mail, computer networking, and much else.)&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Though not originally published in an academic journal, Bush’s essay is one of the most cited pieces of literature in computer science history.&lt;/p&gt;

&lt;p&gt;Link: &lt;a href="http://www.theatlantic.com/magazine/archive/1945/07/as-we-may-think/303881/"&gt;http://www.theatlantic.com/magazine/archive/1945/07/as-we-may-think/303881/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you prefer an abridged version with goofy diagrams, you’re in luck: &lt;a href="http://bit.ly/1FNuTQz"&gt;http://bit.ly/1FNuTQz&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Bio&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Andrew Louis is software engineer from Toronto. After graduating from Computer Science at UofT, he co-founded and CTO’d ShopLocket, an ecommerce service which was acquired in 2014. He is currently working on a secret new project not terribly unrelated to the Memex.&lt;/p&gt;
</content>
  </entry>
</feed>
